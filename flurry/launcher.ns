/** @param {NS} ns **/
export async function main(ns) {
  const flags = ns.flags([
    ["debug", false],
    ["help", false],
  ]);

  if (flags._.length === 0 || flags.help) {
    ns.tprint("This script will deploy and launch the flurry manager on the specified host and targer.");
    ns.tprint(`USAGE: run ${ns.getScriptName()} HOST TARGET`);
    ns.tprint("Example:");
    ns.tprint(`> run ${ns.getScriptName()} x0 phantasy`);
    ns.tprint("For debug mode:");
    ns.tprint(`> run ${ns.getScriptName()} --debug x0 phantasy`);
    return;
  }

  const scriptList = ["/flurry/payloads/hack.ns", "/flurry/payloads/weaken.ns", "/flurry/payloads/grow.ns", "/flurry/main.ns"];
  const host = flags._[0];
  const target = flags._[1];

  // Copy files
  await ns.scp(scriptList, "home", host);

  // Launch the flurry manager
  await ns.exec("/flurry/main.ns", host, 1, target);

  // Monitor the attack
  await ns.exec("/utils/monitor.ns", "home", 1, target);
}

export function autocomplete(data, args) {
  return [...data.servers]; // This script    autocompletes the list of servers.
}
