/** @param {NS} ns **/
export async function main(ns, crime = "mug") {
  let interval = 100;
  while (true) {
    let maxBusyLoops = 100;
    while (ns.isBusy() && maxBusyLoops-- > 0) {
      await ns.sleep(interval);
      ns.print("Waiting to no longer be busy...");
    }
    if (maxBusyLoops <= 0) {
      ns.tprint("User have been busy for too long. auto-crime.js exiting...");
      return;
    }
    ns.tail(); // Force a tail window open when auto-criming, or else it's very difficult to stop if it was accidentally closed.
    let wait = ns.commitCrime(crime) + 10;
    ns.print(`Karma: ${formatNumberShort(ns.heart.break())} Committing crime \"${crime}\" and sleeping for ${formatDuration(wait)}...`);
    await ns.sleep(wait);
  }
}
